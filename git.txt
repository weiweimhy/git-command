安装完成后，最后一步设置
	git config --global user.name "Your Name"
	git config --global user.email "email@example.com"
	
创建版本库
	创建空目录
		mkdir myrepository
		cd myrepository
		pwd                //显示当前目录
	把目录变成版本库
		git init

把文件放到版本库
	git add (文件名)
	git commit -m "说明"
	
查看工作区和版本库的不同
	git diff (文件名)
	
查看仓库的当前状态
	git status
	
版本回滚
	git reset --hard HEAD^  
	 或者
	 git reset --hard HEAD~100
	 
	 git reset --hard commitID
	 
查看历史记录
	git log  
	减少参数
	git log --graph --pretty=oneline --abbrev-commit
	
记录命令
	git reflog
	
撤销工作区的修改
	git checkout --filename
	
撤销暂存区的修改
	git reset HEAD filename
	
删除文件
	rm filename
	git rm filename
	
远程推送
	 git push 
		第一次推送
		git push -u origin master		
		//由于远程库是空的，我们第一次推送master分支
		//时，加上了-u参数，Git不但会把本地的master分
		//支内容推送的远程新的master分支，还会把本地的
		//master分支和远程的master分支关联起来，在以后
		//的推送或者拉取时就可以简化命令
		
关联远程库
	git remote add origin git@server-name:path/repo-name.git
	
克隆远程库
	git clone
	//Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。
	
创建分支
	git chechout -b dev   
	-b表示创建并切换
	相当于：
		创建分支    git branch dev
		切换分支    git checkout dev
		
查看当前分支
	git branch
	
合并分支
	git merge dev
	git merge --no-ff -m "merge with no-ff" dev
	合并分支时，加上--no-ff参数就可以用普通模式合并，
	合并后的历史有分支，能看出来曾经做过合并，
	而fast forward合并就看不出来曾经做过合并。

删除分支
	git branch -d dev
	
打标签
	git tag v1.0

查看标签
	git tag
	git tag id
	带说明的标签
	git tag -a v0.1 -m "version 0.1 released" 3628164
	私钥签名标签
	git tag -s v0.2 -m "signed version 0.2 released" fec145a
	
查看标签信息
	git show v1.0
	
	
